================================================vagrant================================================
para primeiro inicio / vagrant init hashicorp/precise64
vagrant init
Para status /  vagrant status
Para subir / vagrant up
Para conectar / vagrant ssh
Para reinicia / vagrant reload
Para destruir /  vagrant destroy 
Para terminar / vagrant halt
vagrant suspend
vagrant provision
vagrant global-status
vagrant global-status --prune
para congigurar o ssh  / vagrant ssh-config
~/Desktop/backup/ambiente_dev/bionic
ansible-playbook -i /vagrant/configs/ansible/hosts /vagrant/configs/ansible/playbook.ym

======================================mysql============================================================
systemctl status mysqld
systemctl start mysqld.service
dba.configureInstance('vagrant@192.168.50.2:3306');
passwork: bL29V1!2@94
dba.checkInstanceConfiguration('vagrant@192.168.50.2:3306');
cluster = dba.createCluster('vagranttest');
dba.checkInstanceConfiguration()
Cluster.dissolve()
dba.getCluster().status();
SHOW GLOBAL VARIABLES LIKE '%report_host%';
cluster.addInstance(‘cluster_admin@node2’);
drop database mysql_innodb_cluster_metadata;
set global super_read_only=0;
dba.configurelocalinstance(username@MySQLServer:Portnumber);
dba.getCluster([name][, options])
var cluster = dba.getcluster('vagrant');
var cluster = dba.rebootClusterFromCompleteOutage();
Cluster = dba.listClusters();
cluster.status();
Cluster.dissolve()
======================================vim==============================================================
comandos Vim 
-b : permite editar arquivo binario
-h : exibe opções 
+n : inicializa o cursor na n-ésima linha
-r : recarrega o arquivo (o arquivo estava sendo editado quando o vim foi encerrado)
-R : abre arquivo apenas para leitura

Modo de comando
0 : mover o cursor para o início da linha em que o cursor está posicionado.
a : inserir texto após a posição atual do cursor.
A : inserir texto no final da linha atual.
dd : deletar linha atual.
[n]+dd : deletar n linhas a partir da linha atual.
G : ir para o fim do arquivo.
[n]+G : ir para a n-ésima linha do arquivo.
h : voltar um caractere.
H : ir para a primeira linha exibida na tela atual.
i : inserir texto a partir da posição atual do cursor.
I : inserir texto no início da linha atual.
j : descer uma linha.
J : juntar a linha atual com a linha seguinte.
[n]+J : juntar n linhas consecutivas a partir da linha atual.
k : subir uma linha.
l : avançar um caractere.
L : ir para a última linha exibida na tela atual.
n : procurar, a partir da posição atual do cursor, a próxima ocorrência do texto definido no último comando /.
N : procurar, a partir da posição atual do cursor e indo em direção ao início do arquivo,
a próxima ocorrência do texto definido no último comando /.

o : inserir uma linha em branco após a linha atual.
O : inserir uma linha em branco acima da linha atual.
p : inserir linhas copiadas após a linha atual.
P : inserir linhas copiadas antes da linha atual.
r : substituir o caractere atual.
R : substituir um conjunto de caracteres.
s : deletar o caractere atual e inserir texto.
S : apagar linha e inserir novo texto na linha.
u : desfazer a última alteração feita no texto e ainda não desfeita.
U : desfazer a última alteração feita no texto.
x : apagar caractere onde o cursor está posicionado.
$ : mover o cursor para o fim da linha em que o cursor está posicionado.
[n]+y : copiar n linhas a partir da linha atual.
yy : copiar a linha atual.
[n]+Y : copiar n linhas a partir da linha atual.
YY : copiar a linha atual.
CTRL+B : voltar uma página.
CTRL+F : avançar uma página.
F1 : exibir tela de ajuda.
[n]+ENTER : ir para n linhas abaixo da linha atual.
[n]+. : repetir o último comando que alterou o texto n vezes a partir da posição atual do cursor.
[n]+~+ENTER : inverter a caixa (case) dos n caracteres seguintes ao cursor.
/texto : procurar pela primeira ocorrência do texto especificado a partir da posição atual do cursor.

Modo de linha
:r arquivo : incluir arquivo a partir da linha atual do cursor.
:q+ENTER : sair da tela de ajuda.
:q! : sair do vim sem salvar as alterações.
:w arquivo : salvar arquivo com o nome especificado.
:wq : sair do vim salvando as alterações.
:X : criptografa o arquivo.
#====================================================/etc/hosts==========================================================
ideia descontinuada -  consistia em manter definir um hostname para cada maquina diretamente no arquivo hosts
192.168.50.8 hostc
192.168.50.2 mysqldb1c
192.168.50.3 mysqldb2c
192.168.50.4 mysqldb3c
===============================================Criação do usuario=======================================================
criar um usuario que tenha acesso de todo o lugar do computador e que tenha acesso ao banco de dados
APOS A INSTALACAO DO MYSQL REINICIAR O SERVIDOR PARA GARABTIR O SERVIDOR ATIVO
-----------------------------modelo--------------------------------------
CREATE USER 'username'@'ip_address' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO 'username'@'ip_address' WITH GRANT OPTION;
FLUSH PRIVILEGES;
-------------------------------------------------------------------------
#hostc
192.168.50.8

mysql -u root -p
bL29V1!2@93

CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';

GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;


# mysqldb1c
192.168.50.2 mysqldb1c

mysql -u root -p
bL29V1!2@93

CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';
GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

# mysqldb2c

mysql -u root -p
bL29V1!2@93

CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';
GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

# mysqldb3c

mysql -u root -p
bL29V1!2@93

CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';
GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;

FLUSH PRIVILEGES;

# mysqldb4c

CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';
GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

============================================bancodeteste==================================================================
show databases;
USE vagranttest;

CREATE DATABASE vagranttest;


CREATE TABLE fornecedores(codigo int(6) AUTO_INCREMENT,nome varchar(100) NOT NULL,email varchar(100),PRIMARY KEY (codigo));
INSERT INTO fornecedores(codigo, nome, email) VALUES (null, "Gabriel1", "vagrant_teste@gmail.com");
INSERT INTO fornecedores(codigo, nome, email) VALUES (null, "Gabriel2", "vagrant44_teste@gmail.com");
INSERT INTO fornecedores(codigo, nome, email) VALUES (null, "Gabriel3", "vagrant22_teste@gmail.com");

==========================================Criação do cluster============================================================
login maquina mysqldb1c

iptables -A INPUT -p tcp --dport 5432 -j ACCEPT

\c vagrant@192.168.50.2 = password - não e pedida a senha
mysql -u root padrão

mysqladmin -u root  bL29V1!2@93 bL29V1!2@93

mysql -u root -p
bL29V1!2@93

CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';

GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;

FLUSH PRIVILEGES;


dba.configureInstance('vagrant@192.168.50.2:3306');
passwork: bL29V1!2@94

set global super_read_only=0;

dba.checkInstanceConfiguration('vagrant@192.168.50.2:3306');
cluster = dba.createCluster('vagranttest');

----------------erro------------------------------
Dba.createCluster: Group Replication failed to start: MySQL Error 3092 (HY000): localhost.localdomain:3306: 
The server is not configured properly to be an active member of the group. Please see more details on error log. (RuntimeError)


como mando deve ser posto no bash do centos- setsebool -P mysql_connect_any 1

solução para erro as
implementado o comando 'report_host=192.168.50.2' no arquivo  mysql-server.cnf no diretorio /etc/mysql/my.cnf.d/

check com este comando se o as auteraçoes acima foram validas com este comando - SHOW VARIABLES LIKE '%report_host%';

como mando deve ser posto no mysql-client - set global super_read_only=0;
--------------------------------------------------
cluster.addInstance('vagrant@192.168.50....')
cluster.addInstance('192.168.50.2@mysqldb2c');
---------------------error------------------------------

cluster.addInstance('vagrant@192.168.50.3');

teste um - tentativa de alterar as pemissoes do SElinux não funcionou 

Solução:
lembre de liberar as portas iptables -A INPUT -p tcp --dport 33061 -j ACCEPT

alterar as portas do mysql para 330...
mysqldb1c port = 3360
mysqldb2c port = 3362
mysqldb3c port =3363
mysqldb4c port =3364

-----------------------acesso remoto via terminal---------------------------------
mysql -h <ip>-u <root> -p
mysql -h 192.168.50.2 -u root -p

https://www.digitalocean.com/community/tutorials/how-to-allow-remote-access-to-mysql - com o workbench
possivel solução:
https://stackoverflow.com/questions/14779104/mysql-how-to-allow-remote-connection-to-mysql
https://www.youtube.com/watch?v=PVo70d-BkUg


______________________________________________________________________________________________________________________________
maquina mysqldb2c
\c vagrant@192.168.50.3 passwork: bL29V1!2@94
mysql -u root -p = password - bL29V1!2@93


CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';
GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

dba.configureInstance('vagrant@192.168.50.3'); passwork: bL29V1!2@94
dba.checkInstanceConfiguration('vagrant@192.168.50.3');
cluster = dba.createCluster('vagranttest');

var 192.168.50.2 = dba.createCluster('vagranttest');
____________________________________________________________________________________________________________________________
maquina mysqldb3c
\c vagrant@192.168.50.4 passwork: bL29V1!2@94

mysql -u root -p = password - bL29V1!2@93


CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';
GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

SHOW VARIABLES LIKE '%report_host%';

dba.configureInstance('vagrant@192.168.50.4:3306'); passwork: bL29V1!2@94
dba.checkInstanceConfiguration('vagrant@192.168.50.4:3306');
cluster = dba.createCluster('vagranttest');
var 192.168.50.2 = dba.createCluster('vagranttest');
______________________________________________________________________________________________________________________________
maquina mysqldb4c
\c vagrant@192.168.50.10 passwork: bL29V1!2@94

mysql -u root -p = password - bL29V1!2@93

CREATE USER 'vagrant'@'%' IDENTIFIED BY 'bL29V1!2@94';
GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

dba.configureInstance('vagrant@192.168.50.10:3306'); passwork: bL29V1!2@94  
dba.checkInstanceConfiguration('vagrant@192.168.50.10:3306');
cluster = dba.createCluster('vagranttest');
var 192.168.50.2 = dba.createCluster('vagranttest');





dba.checkInstanceConfiguration()
Cluster.dissolve()
dba.getCluster().status();
cluster.addInstance('cluster_admin@');

drop database mysql_innodb_cluster_metadata;
set global super_read_only=0;

dba.configurelocalinstance('u''sername@MySQLServer:Portnumber');

dba.getCluster([name][, options])
var cluster = dba.getcluster('vagrant');
var cluster = dba.rebootClusterFromCompleteOutage();
Cluster = dba.listClusters();
cluster.status();
Cluster.dissolve()
==================================================solucao com o renato========================================================
# Group replication part
transaction_write_set_extraction=XXHASH64
loose-group_replication_start_on_boot=OFF
loose-group_replication_local_address="192.168.100.202:33061"
loose-group_replication_bootstrap_group=OFF
report_port=3306 
report_host=192.168.100.202

loose-group_replication_local_address="192.168.100.202:33061" report_host=192.168.100.202

SHOW GLOBAL VARIABLES LIKE '%report_host%'

===================criação do cluster baseado neste video https://www.youtube.com/watch?v=gyP9y0VDdYI=========================




===============================================manipulação de usuarios=======================================================

SELECT User, Host FROM mysql.user;
SELECT User, FROM mysql.user;


GRANT ALL PRIVILEGES ON *.* TO 'vagrant'@'%';
Flush privileges;


=====================================teste=================================================================
protoclo de teste 
vagrant up  mysqldb1c mysqldb2c mysqldb3c mysqldb4c nginxc hostc mysqlrouter

vagrant suspend mysqlrouter hostc mysqldb1c mysqldb2c mysqldb3c mysqldb4c

find / -name 

curl ifconfig.me
ip addr
hostname -I

caminho para manipulações de arquivos
vagrant scp "\Users\gabri\Downloads\mysql-shell-8.0.28-1.el8.x86_64.rpm" hostc:/home/vagrant
mv '\Users\gabri\Downloads\mysql-shell-8.0.28-1.el8.x86_64.rpm' mysql-shell-8.0.28-1.el8.x86_64.rpm

yum localinstall mysql-shell-8.0.28-1.el8.x86_64.rpm

check se o sevidor esta funcionando
- systemctl status mysqld
- systemctl start mysqld.service


acesso ao mysql
ch -  \c vagrant@192.168.50.2
- mysql -u vagrant -h 192.168.50.2 -p
- bL29V1!2@94

mysql -u root -p
bL29V1!2@93

previlegios consedidos a maquina pra ....
GRANT CLONE_ADMIN, CONNECTION_ADMIN, CREATE USER, EXECUTE, FILE, GROUP_REPLICATION_ADMIN, PERSIST_RO_VARIABLES_ADMIN, PROCESS, RELOAD, REPLICATION CLIENT, REPLICATION SLAVE, REPLICATION_APPLIER, REPLICATION_SLAVE_ADMIN, ROLE_ADMIN, SELECT, SHUTDOWN, SYSTEM_VARIABLES_ADMIN ON *.* TO 'vagrant'@'%' WITH GRANT OPTION;
GRANT DELETE, INSERT, UPDATE ON mysql.* TO 'vagrant'@'%' WITH GRANT OPTION;
GRANT ALTER, ALTER ROUTINE, CREATE, CREATE ROUTINE, CREATE TEMPORARY TABLES, CREATE VIEW, DELETE, DROP, EVENT, EXECUTE, INDEX, INSERT, LOCK TABLES, REFERENCES, SHOW VIEW, TRIGGER, UPDATE ON mysql_innodb_cluster_metadata.* TO 'vagrant'@'%' WITH GRANT OPTION;
GRANT ALTER, ALTER ROUTINE, CREATE, CREATE ROUTINE, CREATE TEMPORARY TABLES, CREATE VIEW, DELETE, DROP, EVENT, EXECUTE, INDEX, INSERT, LOCK TABLES, REFERENCES, SHOW VIEW, TRIGGER, UPDATE ON mysql_innodb_cluster_metadata_bkp.* TO 'vagrant'@'%' WITH GRANT OPTION;
GRANT ALTER, ALTER ROUTINE, CREATE, CREATE ROUTINE, CREATE TEMPORARY TABLES, CREATE VIEW, DELETE, DROP, EVENT, EXECUTE, INDEX, INSERT, LOCK TABLES, REFERENCES, SHOW VIEW, TRIGGER, UPDATE ON mysql_innodb_cluster_metadata_previous.* TO 'vagrant'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

SELINUX=Permissive cd /etc/selinux/

re estabelecer o cluster quando reinicial o servidor de teste
dba.rebootClusterFromCompleteOutage();


vagrant suspend  mysqlrouter hostc mysqldb1c mysqldb2c mysqldb3c mysqldb4c